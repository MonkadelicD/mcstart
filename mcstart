#!/bin/bash 

# Enable debugging
#set -x
#echo $PWD

# Declare variables

# Set variable for each java version needed
java8=/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
java11=/usr/lib/jvm/java-11-openjdk-amd64/bin/java
java16=/usr/lib/jvm/java-16-openjdk-amd64/bin/java
java17=/usr/lib/jvm/java-17-openjdk-amd64/bin/java

# Help/Usage

help()
{
	# Display help/usage
	echo "This script requires at least a server type to be specified."
	echo "A build version can also be specified as the second option."
	echo
	echo "Syntax: startmc.sh [servertype] [version]"
	echo
}

# Get Minecraft server software and version from first and second CLI options 
cd $(echo "$HOME")
#echo $PWD

if [ -z $1 ];
then
	echo "No options set..."
	help
	exit 1
else
	if [[ -z $2 ]];
	then
		mcVersion="current"
	else
		mcVersion="$2"
	fi
	mcSrvrType="$1" 
	mcSrvrDir="$mcSrvrType"/"$mcVersion"
fi


# Check and set input variables if valid selections
if [[ -e $mcSrvrDir && -d $mcSrvrDir ]];
then
	echo "Found $mcSrvrType/$mcVersion"
	srvrDir="$HOME"/"$mcSrvrDir"
	linkTarget=$(readlink -f "$mcSrvrDir")
	buildVersion=$(basename "$linkTarget")
else
	echo "MC server type or version not valid."
	help
fi

# Get MC server minor version for java compatibilty
IFS=. read major minor point <<< "$buildVersion"
if [[ $minor == 17 ]]; then
	javabin="$java16"
elif [[ $minor > 17 ]]; then
	javabin="$java17"
else
	javabin="$java8"
fi

# Get configured port for MC server and echo to console
srvrPort=$(grep "server-port" "$srvrDir"/server.properties | awk -F = '{ print $2 }')

# Main program

# Change to directory selected version is located in. 
cd "$srvrDir"
#echo $PWD

# Java command to start MC server in a screen session. 
if [[ $mcSrvrType == forge ]];
then
	echo "Starting $mcSrvrType-$buildVersion on Port: $srvrPort"
	screen -d -m -S "MCServer_$mcSrvrType-$buildVersion" /run.sh
	
elif [[ $mcSrvrType == fabric ]];
then
	echo "Starting $mcSrvrType-$buildVersion on Port: $srvrPort"
	screen -d -m -S "MCServer_$mcSrvrType-$buildVersion" "$javabin" -jar "$mcSrvrType"-"$buildVersion"-server-launch.jar
else
	echo "Starting $mcSrvrType-$buildVersion on Port: $srvrPort"
	screen -d -m -S "MCServer_$mcSrvrType-$buildVersion" "$javabin" -Xms1G -Xmx4G -jar "$mcSrvrType"-"$buildVersion".jar nogui
fi

#set +x
